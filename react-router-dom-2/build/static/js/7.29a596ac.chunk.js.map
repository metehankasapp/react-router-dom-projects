{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuotes.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","setIsEntered","authorInputRef","useRef","textInputRef","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuotes","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,wFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBC+D/BC,EA3DG,SAACL,GACjB,MAAkCM,oBAAS,GAA3C,mBAAkBC,GAAlB,WACMC,EAAiBC,mBACjBC,EAAeD,mBAgBrB,OACE,8BAQE,cAAC,EAAD,UACE,uBACEE,QAdiB,WACvBJ,GAAa,IAcPN,UAAWC,IAAQU,KACnBC,SA3BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBR,EAAeS,QAAQC,MACvCC,EAAcT,EAAaO,QAAQC,MAIzClB,EAAMoB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAgB5C,UAKGnB,EAAMuB,WACL,qBAAKtB,UAAWC,IAAQsB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKxB,UAAWC,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,OAEtC,sBAAKP,UAAWC,IAAQwB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKpB,OAEpC,qBAAKT,UAAWC,IAAQ8B,QAAxB,SACE,wBAAQC,QAAS,kBAAM1B,GAAa,IAAQN,UAAU,MAAtD,iC,gBC1BGiC,UAvBG,WAChB,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAEfC,EAAWC,cAEjBC,qBAAU,WACO,cAAXH,GACFC,EAAS,aAEV,CAACD,EAAQC,IAIZ,OACE,mCACE,cAAC,EAAD,CACEhB,UAAsB,YAAXe,EACXlB,WAPkB,SAACsB,GACvBL,EAAYK","file":"static/js/7.29a596ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";/* \nimport { Prompt } from \"react-router-dom\"; */\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const FormFocusHandler = () => {\n    setIsEntered(true);\n  };\n  return (\n    <div>\n      {/* prompt eğer bir fonksyion çalışırken başka sayfaya yönelndirmek isterseen uyarı verir mesela inputa focus olursa. */}\n      {/* <Prompt\n        when={isEntered}\n        message={(location) =>\n          \"Are you sure you want to leave all your entered data will lost \"\n        }\n      /> */}\n      <Card>\n        <form\n          onFocus={FormFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={() => setIsEntered(false)} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst NewQuotes = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      navigate(\"/quotes\");\n    }\n  }, [status, navigate]);\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n  return (\n    <>\n      <QuoteForm\n        isLoading={status === \"pending\"}\n        onAddQuote={addQuoteHandler}\n      />\n    </>\n  );\n};\n\nexport default NewQuotes;\n"],"sourceRoot":""}